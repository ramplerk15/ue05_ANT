<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="ue05 Junit and Javadoc with ANT" default="junit">

	<property name="src" value="${basedir}/src" />
	<property name="test" value="${basedir}/test" />
	<property name="libs" value="${basedir}/libs" />

	<!-- 
	complete these property definitions!
	
	<property name="target" value=""/>
	<property name="target.classes" value=""/>
	<property name="target.junit" value=""/>
	<property name="reports" value="" />
	-->

	<path id="junit.class.path">
		<pathelement location="${libs}/junit.jar" />
		<pathelement location="${libs}/org.hamcrest.core_1.3.0.v201303031735.jar" />
		<pathelement location="${target.classes}" />
		<pathelement location="${target.junit}" />
		<!-- pathelement location="ALTERNATIVE: USE FIXED PATH to Eclipse built in LIBs"/-->
	</path>

	<target name="clean">
		<!-- delete all created artefacts -->
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${target}" />
	</target>

	<target name="compile" depends="prepare">
		<mkdir dir="${target.classes}" />

		<!-- compile sourcen to ${target.classes}-->

		<mkdir dir="${target.junit}" />

		<!-- compile junit tests to ${target.junit}-->

	</target>

	<!-- Run the JUnit Tests -->
	<target name="junit" depends="compile">
		<mkdir dir="${reports}" />
		<!-- junit "there is an attribute missing!" fork="true" haltonfailure="yes" -->
		<classpath refid="junit.class.path" />

		<batchtest todir="${reports}">
			<fileset dir="${test}">
				<include name="**/*Test*.java" />
			</fileset>
		</batchtest>
		<!-- /junit -->
	</target>

	<!-- Conversion fun: transform target into HTML -->
	<target name="reportTransform" depends="junit">
		<junitreport todir="${reports}">
			<fileset dir="${reports}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports}/html" />
		</junitreport>
	</target>

	<!-- create a javadoc target-->
	<target name="" depends="junit">
	</target

	<!-- 
		create a target that does 'everything'
		compiling source
		compiliing tests
		creating test summary
		converting test summary
		zip and copy test summary to destination folder
		create Javadoc
		zip and copy javadoc to destination folder.
	 -->
	

</project>